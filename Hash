A hash function is any function that can be used to map data of arbitrary size to fixed-size values.
It is a common practice in computer science and is used for several different purposes.

Examples include:

1. Message Digest
2. Password Verification
3. Data Structures
4. Compiler Operation
5. Linking file name and path together

Difference between Hashing and Encryption

Encryption - is a two-way function; what is encrypted can be decrypted with the proper key.
Hashing - however, is a one-way function that scrambles plain text to produce a unique message digest.
With a properly designed algorithm, there is no way to reverse the hashing process to reveal
the original password.

1. Message Digest

Let's suppose you have files that need to be stored on a available cloud provider. It's paramount that
no third party is messing with the files you store. You do so by uwing a cryptographic hash algorithym by calculating
the hash of the text. SHA-256 is one of the predominant cryptanalysis hash contrivances. The full area
of the has thus calculated is 32 bytes. So the computation of hasing huge amounts of files won't be an issue.
This hash is then saved on your local instrument.

Now, when you later return and retrieve said files, you need to check there is no foul play or tampering.
This can be done by once again hashing the file and comparing the one you had previously to the current.
The hash will certainly change is anyone has manipulated the file.

FUN FACT: SHA-2 was developed by the NSA

2. Password Verification

In password authentication, cryptographic hash functions are widely used.
Let's suppose you type your email and password to validate "your" account.
In the background a hash of the password you're entering is being calculated, it is then forwarded
to the server for password authentication. The passwords saved on the server are simply the original
passwords calculated hash values. This is to guarantee that no sniffing is present when the password
is transmitted from cloud to server.

3. Data Structures

Various programming languages provide Data Structures found on the hash table

4. Compiler Operation:







Hashing is used to index and retrieve items in a database because it is faster to find the item using the shorter
hashed key than to find it using the original value.

Hashing Algorithm

Plain Text > Hash Function > Hashed Text

One main use of hashing is to compare files for equality. Without opening two document files to compare
them word-for-word, the calculated hash values of these files will allow the owner to know
imediately if they are different.


Hash Table(HashMap) or Dictionary

These store data in the form of key-value pairs, where the key(hashcode) is generated from a hash
function and the resulting hash code is used as the index at which the value is stored in the
data structure. That makes accessing the data faster as the index value behaves as a key for the data value.
In Python, the Dictionary data type respresents the implementatin of hash tables.

Technology example that's adopted Hashing techniques.

1. BlockChain

A blockchain is a digital concept to store data. This data comes in blocks, so imamgine
blocks of digital data. These blocks are chained together, and this makes their data immutable.
Every block in the chain gets a unique digital signature that corresponds to exactly the
string of data in that block. If anything inside a block changes, even just a single digit change,
the block will get a new signature. This happens through a cryptographic hash function.
Block chainuses SHA-256 hash algorithm and is a one-way cryptographic function.